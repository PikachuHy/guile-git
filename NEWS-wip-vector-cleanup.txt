(wip-vector-cleanup for Guile 3.0) -*- coding: utf-8; mode: org; -*-

TBA to NEWS for this branch.

 
* Forward incompatible changes

Applying these changes will make your program work with this version of
Guile and continue working with older versions, at least back to 2.2.

** vector->list and vector-copy require a true vector argument.

Use array->list and array-copy (from (ice-9 arrays)) on general arrays.

** scm_is_simple_vector has been removed.

Use scm_is_vector instead.


* Backward incompatible changes

Applying these changes will make your program work with this version of
Guile and STOP working with older versions.

** scm_array_p takes a single argument.

This function used to take a second unused argument for the sake of
compatibility with older versions of Guile. Just remove this argument from your
calls.

** SCM_SIMPLE_VECTOR_REF, SCM_SIMPLE_VECTOR_SET and SCM_SIMPLE_VECTOR_LENGTH have been renamed.

Use SCM_VECTOR_REF, SCM_VECTOR_SET and SCM_VECTOR_LENGTH instead.

** The vector argument to scm_vector_elements / scm_vector_writable_elements must be a true vector. Handle/inc arguments have been removed.

Use scm_array_get_handle and scm_array_handle_elements / scm_array_handle_writable_elements on general arrays.

** The vector argument to scm_bitvector_elements / scm_bitvector_writable_elements must be a true bitvector. Handle/inc arguments have been removed.

Use scm_array_get_handle and scm_array_handle_bit_elements / scm_array_handle_bit_writable_elements on bit arrays.
Use scm_array1_bit_elements (NEW) / scm_array1_bit_writable_elements (NEW) on rank-1 bit arrays.


* Rationale / TODO

** Status as of 3.0.0
  
  - The _elements functions require the array handle interface even for true vectors, even though the handle is unnecessary. This creates a burden (having to declare, release, etc).
  - The srfi-4 _elements functions don't accept arbitrary rank-1 xxxarray even though they require the array handle interface (inc, handle are superfluous).

** Plan

  - Provide scm_VTYPE_(writable_)elements with signature [(SCM) -> pointer] for all vector types.
  - Provide scm_array1_VTYPE_(writable_)elements with signature [(SCM, &handle, ...) -> pointer] for all vector types. These replace the old scm_VTYPE_(writable_)elements but will be available on the array API and not on the xxxvector APIs.
  - remove the dependence of vector.c bitvector.c bytevector.c etc. on array-handle.h
  - remove the double dependence of array-ref -> VECTOR-TYPE-ref -> array_handle
    use seen in scm_array_get_handle.
  - bug: scm_bitvector_elements doesn't select for type = bit
  - bug: bit-set*! already requires second arg to be true bitvector
  - bug: setaffinity in posix.c failed to release the mask handle


* Other

** vector-move-right!, vector-move-left!, either

  - work only on vector type, use array-copy! and make-shared-array (or future slicing facility) for general arrays
  - rename to array-move... and make type generic
  - remove entirely and just use array-copy!

** basic rank-1 ops on VECTOR_TYPEs need (len begin inc) instead of (begin end)

  - look at CBLAS/BLIS
  - this is a problem because all the RnRS & SRFIs use (begin end) :-(
